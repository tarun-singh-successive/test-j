@model TestApplication.DataLayer.IPager
@using TestApplication.Helpers
@*@{
    var qs = Model.AppendLimitToQuery
        ? Common.UpdateQueryString(Convert.ToString(Context.Request.QueryString.Value), "limit", Model.RecordsPerPage.ToString())
        : Context.Request.QueryString.Value.ToString();
    string path = Context.Request.Path;
}

<span class="pull-left" style="line-height:32px;">
    @(((Model.CurrentPage - 1) * Model.RecordsPerPage) + 1) - @Math.Min(Model.CurrentPage * Model.RecordsPerPage, Model.TotalRecords) of @Model.TotalRecords
</span>

<div class="pull-right">
    @if (Model.AppendLimitToQuery)
    {
        <select class="form-control margin-r-5 pull-left" style="width:100px;" onchange="onLimitChange(this.value)">
            <option value="100" selected="@(Model.RecordsPerPage == 100)">100</option>
            <option value="50" selected="@(Model.RecordsPerPage == 50)">50</option>
        </select>
    }
    <div class="no-padding pull-left">
        @if (Model.CurrentPage > 1)
        {
            <a href="@path?@Utility.UpdateQueryString(qs,"page",$"{Model.CurrentPage-1}")" class="btn btn-info">&laquo; Prev</a>
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@path?@Utility.UpdateQueryString(qs,"page",$"{Model.CurrentPage+1}")" class="btn btn-info">Next &raquo;</a>
        }
    </div>
</div>*@
