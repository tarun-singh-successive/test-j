@model TestApplication.Entities.AmountTransaction
@using TestApplication.Models
@using TestApplication.Helpers

@using (Ajax.BeginForm("AddDeposit", new AjaxOptions()
{
    OnSuccess = "onSuccess"
}))
{
    @Html.AntiForgeryToken()

    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Member's PAN No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8 label-text">
                @Html.DisplayFor(model => model.PanNo, new { @class = "form-control ", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Amount to Deposit", htmlAttributes: new { @class = "control-label col-md-2", @for = nameof(Model.Amount) })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_Payment", Model)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">

                @if ((Model?.Id ?? string.Empty) == string.Empty)
                {
                    <input type="submit" value="Add Deposit" onclick="validate(this, event)" class="btn btn-primary waves-effect waves-light" />
                }
                else if (ViewBag.IsView == true)
                {
                    <a class="btn btn-primary" href="@Common.GetUrl("AddDeposit", "SavingAccount", @Model.Id)">Edit</a>
                }
                else
                {
                    <input type="submit" value="Update Group" onclick="validate(this, event)" class="btn btn-primary waves-effect waves-light" />
                }
                <a class="btn btn-secondary" href="@Common.GetUrl("SavingAccounts", "SavingAccount")">
                    Cancel
                </a>
            </div>
        </div>
    </div>
}

