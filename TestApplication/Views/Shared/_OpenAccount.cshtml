
@model TestApplication.Entities.MemberAccount
@using TestApplication.Models

@Html.Partial("_CommonOpenAccount", Model)
<div class="form-group">
    @Html.LabelFor(model => model.SchemeId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        @Html.DropDownListFor(model => model.SchemeId, FdModels.GetSavingAccountSchemes(), "Select Scheme", new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(model => model.SchemeId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MinAmount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        @Html.EditorFor(model => model.MinAmount, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.MinAmount, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    <div class="col-md-8 col-md-offset-2">
        <div class="col-md-2 p-r0">
            <input input data-val="true" data-val-required="The Active field is required." id="MinAmountCheckbox" name="MinAmountCheckbox" type="checkbox" value="true" switch="bool">
            <label for="MinAmountCheckbox" data-on-label="Yes" data-off-label="No" class="m-t-4"></label>
        </div>
        <div class="col-md-10 p-l0 m-l-50">
            <label class="control-label">Open account with less than minimum amount</label>
        </div>
        @Html.ValidationMessageFor(model => model.MinAmountCheckbox, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "date" } })
        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.IsJointAccount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8" style="padding-top:6px">
        <div class="custom-control custom-radio custom-control-inline">
            <input type="radio" class="custom-control-input" id="defaultInline1" name="IsJointAccount" onclick="jointAccountClicked(this)" value="false">
            <label class="custom-control-label" for="defaultInline1">Single</label>
        </div>
        <div class="custom-control custom-radio custom-control-inline">
            <input type="radio" class="custom-control-input" id="defaultInline2" name="IsJointAccount" onclick="jointAccountClicked(this)" value="true">
            <label class="custom-control-label" for="defaultInline2">Joint A/C</label>
        </div>
        @Html.ValidationMessageFor(model => model.IsJointAccount, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group JointAccountDropdown">
    @Html.LabelFor(model => model.JointAccountMemberId, htmlAttributes: new { @class="control-label col-md-2" })
    <div class="col-md-8">
        @Html.DropDownListFor(model => model.JointAccountMemberId, MemberModel.GetMembers(), "Select Joint Member", new { @class = "form-control select2" })
        @Html.ValidationMessageFor(model => model.JointAccountMemberId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.IsNominee, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        <input input data-val="true" data-val-required="The Nominee field is required." id="IsNominee" name="IsNominee" type="checkbox" value="true" switch="bool">
        <label for="IsNominee" data-on-label="Yes" data-off-label="No" class="m-t-4"></label>
        @Html.ValidationMessageFor(model => model.IsNominee, "", new { @class = "text-danger" })
    </div>
</div>


