@model TestApplication.Entities.MemberAccountNominee
    @using TestApplication.Helpers
@using TestApplication.Models
@{
    ViewBag.Title = "AddMember";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add/ Update Member</h2>

@using (Html.BeginForm("AddMember", "Member", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Member</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Member.AgentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Member.AgentId, (IEnumerable<SelectListItem>)ViewBag.Agents, new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.Member.AgentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Member.GroupId, MemberModel.GetGroups(), new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.Member.GroupId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Member.BranchId, MemberModel.GetBranches(), new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.Member.BranchId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Member.EnrollmentDate, new { @class = "form-control", @type = "datetime-local", @placeholder = "mm/dd/yyyy" })
            @Html.ValidationMessageFor(model => model.Member.EnrollmentDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8" style="padding-top:6px">
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline1" name="Member.Title" value="1">
                <label class="custom-control-label" for="defaultInline1">Mr.</label>
            </div>

            <!-- Default inline 2-->
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline2" name="Member.Title" value="2">
                <label class="custom-control-label" for="defaultInline2">Ms.</label>
            </div>

            <!-- Default inline 3-->
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline3" name="Member.Title" value="3">
                <label class="custom-control-label" for="defaultInline3">Mrs.</label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8" style="padding-top:6px">
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline1" name="Member.Gender" value="male">
                <label class="custom-control-label" for="defaultInline1">Male</label>
            </div>

            <!-- Default inline 2-->
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline2" name="Member.Gender" value="female">
                <label class="custom-control-label" for="defaultInline2">Female</label>
            </div>

            <!-- Default inline 3-->
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="defaultInline3" name="Member.Gender" value="others">
                <label class="custom-control-label" for="defaultInline3">Others</label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Member.DOB, new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(model => model.Member.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.Occupation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.Occupation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Member.CountryId, (IEnumerable<SelectListItem>)ViewBag.AllCountries, "Please select country",
                                new { @class = "form-control select2", @onchange= "loadStates(this)" })
            @Html.ValidationMessageFor(model => model.Member.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Member.StateId, (IEnumerable<SelectListItem>)ViewBag.IndiaStates, "Please select state", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.Member.StateId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.Address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.Address1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.Address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.Address2, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.AadharNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.AadharNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.AadharNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Member.VoterId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.VoterId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.VoterId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.PanNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.PanNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.PanNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.FatherName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.FatherName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Member.HusbandWifeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Member.HusbandWifeName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Member.HusbandWifeName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-8">

            @if (Model.Id == 0)
            {
                <input type="submit" value="Create Member" class="btn btn-primary waves-effect waves-light" />
            }
            else if (ViewBag.IsView == true)
            {
                <a class="btn btn-primary waves-effect waves-light" href="@Common.GetUrl("AddMember", "Member", @Model.Id)">Edit</a>
            }
            else
            {
                <input type="submit" value="Update Group" class="btn btn-primary waves-effect waves-light" />
            }
            <a class="btn btn-secondary" href="@Common.GetUrl("Members", "Member")">
                Cancel
            </a>
        </div>
    </div>
   
</div>
}

@section Scripts {

    <script type="text/javascript">
        function loadStates(countryDropdown) {
            var obj = { countryId: countryDropdown.value };
            $.ajax({
                url: "/Company/GetStatesByCountryId",
                data: JSON.stringify(obj),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                async: true,
                success: function (result) {
                    $("#Member_StateId").empty();
                    $(result).each(function () {
                        $("#Member_StateId").append($("<option></option>").val(this.Value).html(this.Text));
                    });
                },
                error: function (data) { }
            });
        }

        $(document).ready(function () {
            var disabled = '@ViewData["disablecontrols"].ToString()';
            if (disabled == 'True') {
                $('input,select,:button').attr('disabled', disabled);
            }

        });
    </script>

}

