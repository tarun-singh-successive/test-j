@model TestApplication.Entities.Member
@using TestApplication.Helpers
@using TestApplication.Models
@{
    ViewBag.Title = "AddMinor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Minor</h2>

@using (Html.BeginForm("AddMinor", "Member", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Member</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.EnrollmentDate, new { @class = "form-control", @type = "datetime-local", @placeholder = "mm/dd/yyyy", required = "required" })
            @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-outline-primary active">
                <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="1" checked="checked">
                Mr.
            </label>
            <label class="btn btn-outline-primary">
                <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="2">
                Ms.
            </label>
            <label class="btn btn-outline-primary">
                <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="3">
                Mrs.
            </label>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="1">
                    Mr.
                </label>
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="2">
                    Ms.
                </label>
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Title must be a number." data-val-required="The Title field is required." id="Title" name="Title" type="radio" value="3">
                    Mrs.
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Gender must be a number." data-val-required="The Gender field is required." id="Gender" name="Gender" type="radio" value="Male" required = "required">
                    Male
                </label>
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Gender must be a number." data-val-required="The Gender field is required." id="Gender" name="Gender" type="radio" value="Female" required = "required">
                    Female
                </label>
                <label class="btn btn-outline-primary">
                    <input data-val="true" data-val-number="The field Gender must be a number." data-val-required="The Gender field is required." id="Gender" name="Gender" type="radio" value="Others">
                    Others
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.DOB, new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2", @for = "ParentMemberId" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ParentMemberId, MemberModel.GetMembers(), new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AadharNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.AadharNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AadharNumber, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-8">
            @*<input type="submit" value="Create" class="btn btn-primary waves-effect waves-light" onclick="window.location.href = 'http://localhost:51779/Member/MemberProfile';" />*@
            <a class="btn btn-info waves-effect waves-light" type="" href="@Common.GetUrl("AddMinor","Member")">Add Minor</a><a class="btn adjacent-btn btn-secondary" href="@Common.GetUrl("Minors","Member")">Cancel</a>
        </div>
    </div>
</div>
}

