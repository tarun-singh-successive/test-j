@model TestApplication.Entities.CompanyProfile
@{
    /**/

    ViewBag.Title = "CompanyProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/css")

@using (Html.BeginForm("CompanyProfile", "Company", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Company Profile</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.CompanyName, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ShortName, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.ShortName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AboutCompany, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.AboutCompany, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-md-2 col-md-offset-1"><h4 class="title color-black" style="padding-bottom:6px;">Reg. Office Address:</h4></div>
    <div class="clearfix"></div>

    <div class="form-group">
        @Html.LabelFor(m => m.CountryId, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(m => m.CountryId, (IEnumerable<SelectListItem>)ViewBag.AllCountries, "[Select]", new { @class = "form-control",
                                     @onchange = "loadStates(this)" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StateId, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(m => m.StateId, (IEnumerable<SelectListItem>)ViewBag.IndiaStates, "[Select]", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address1, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address2, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Mobile, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Landline, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Landline, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CIN, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.CIN, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PAN, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.PAN, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.TAN, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.TAN, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CompanyCategoryId, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(m => m.CompanyCategoryId, TestApplication.Models.CompanyModel.LoadCompanyCategories(), new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CompanyClass, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.CompanyClass, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ShareNominalValue, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.ShareNominalValue, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IncorporationDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.IncorporationDate, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker hasDatePicker", @type="date" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IncorporationCountryId, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => x.IncorporationCountryId, (IEnumerable<SelectListItem>)ViewBag.AllCountries, "[Select]",
                                    new { @class = "form-control", @onchange="loadIncorporationState(this)" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IncorporationStateId, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => x.IncorporationStateId, (IEnumerable<SelectListItem>)ViewBag.IndiaStates, "[Select]", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AuthorizedCapital, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.AuthorizedCapital, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PaidupCapital, new { @class = "col-md-2 control-label" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.PaidupCapital, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-8">
            <input type="submit" class="btn btn-primary waves-effect waves-light" value="Submit" />
            <button type="reset" class="btn btn-secondary waves-effect m-l-5" id="Cancel" onclick="redirect()">
                Cancel
            </button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css")
    <script type="text/javascript" src="@Url.Content("~/")assets/js/project.js"></script>
    <script type="text/javascript">
        function loadStates(countryDropdown) {
            var obj = { countryId: countryDropdown.value };
            $.ajax({
                url: "/Company/GetStatesByCountryId",
                data: JSON.stringify(obj),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                async: true,
                success: function (result) {
                    $("#StateId").empty();
                    $(result).each(function () {
                        $("#StateId").append($("<option></option>").val(this.Value).html(this.Text));
                    });
                },
                error: function (data) { }
            });
        }

        function loadIncorporationState(incorporationCountry) {
            var obj = { countryId: incorporationCountry.value };
            $.ajax({
                url: "/Company/GetStatesByCountryId",
                data: JSON.stringify(obj),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                async: true,
                success: function (result) {
                    $("#IncorporationStateId").empty();
                    $(result).each(function () {
                        $("#IncorporationStateId").append($("<option></option>").val(this.Value).html(this.Text));
                    });
                },
                error: function (data) { }
            });
        }

        function redirect(){
            window.location.href = 'http://localhost:51779/Company/ViewCompanyProfile';
        }
       
        $(document).ready(function () {
            var $j = jQuery.noConflict();
            $j(".date-picker").datepicker();
        });
    </script>
}

